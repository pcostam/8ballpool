/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pipeline;

import kafka.KafkaConfig;
import kafka.Producer;
import mongodb.BulkWriteInsert;
import mongodb.MongoDBSetup;

import java.io.IOException;
import java.util.Collections;
import java.util.Properties;
import java.util.Set;
import java.util.concurrent.ExecutionException;

import org.apache.kafka.clients.admin.*;
import org.apache.kafka.common.KafkaFuture;


public class App {

    public static void main(String[] args) throws IOException, ExecutionException, InterruptedException {
        //setup mongoDb
        MongoDBSetup setupMongo = new MongoDBSetup();
        BulkWriteInsert.doBulkInsert(setupMongo.getCollection());
        //initialize zookeeper and kafka server???

        Properties properties = new Properties();
        properties.put(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, KafkaConfig.BOOTSTRAP_SERVER);

        try (AdminClient admin = AdminClient.create(properties)) {
            int partitions = 1;
            short replicationFactor = 1;
            String topicName = "8sample-topic";

            ListTopicsOptions options = new ListTopicsOptions();
            options.listInternal(true);
            ListTopicsResult topics = admin.listTopics(options);
            Set<String> currentTopicList = topics.names().get();
            if(!currentTopicList.contains(topicName)) {

                NewTopic newTopic = new NewTopic(topicName, partitions, replicationFactor);

                CreateTopicsResult result = admin.createTopics(
                        Collections.singleton(newTopic)
                );

                KafkaFuture<Void> future = result.values().get(topicName);
                future.get();
            }

        }


        //sends init and in-app events
        Producer producer = new Producer();
        Thread t1 = new Thread(producer);
        t1.start();
    }
}
